(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)
If[$FrontEnd===Null,Unprotect[Style];
Unprotect[StyleBox];
Style[expr_,opts___]:=expr;
StyleBox[expr_,opts___]:=expr;
Protect[Style];
Protect[StyleBox];];


(* ::Input::Initialization:: *)
PrintTemporary["\!\(\*
StyleBox[\"Loading\",\nFontSize->10,\nFontWeight->\"Plain\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSize->10,\nFontWeight->\"Plain\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"external\",\nFontSize->10,\nFontWeight->\"Plain\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSize->10,\nFontWeight->\"Plain\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"dependencies\",\nFontSize->10,\nFontWeight->\"Plain\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",\nFontSize->10,\nFontWeight->\"Plain\",\nFontSlant->\"Italic\"]\)"];

TensorBasesInstalled[]:=Module[{TensorBasesDirectory},
TensorBasesDirectory=SelectFirst[
Join[
{
FileNameJoin[{$UserBaseDirectory,"Applications","TensorBases"}],
FileNameJoin[{$BaseDirectory,"Applications","TensorBases"}],
FileNameJoin[{$InstallationDirectory,"AddOns","Applications","TensorBases"}],
FileNameJoin[{$InstallationDirectory,"AddOns","Packages","TensorBases"}],
FileNameJoin[{$InstallationDirectory,"AddOns","ExtraPackages","TensorBases"}]
},
Select[$Path,StringContainsQ[#,"TensorBases"]&]
],
DirectoryQ[#]&
]<>"/"//Quiet;
If[Head[TensorBasesDirectory]=!=String,Return[False]];
Return[True];
];

If[Not@TensorBasesInstalled[],
If[ChoiceDialog["TensorBases does not seem to be installed. Do you want to install it?",WindowTitle->"Install TensorBases",WindowSize->{Medium,All}],
Import["https://raw.githubusercontent.com/satfra/TensorBases/main/TensorBasesInstaller.m"],
Print["\!\(\*
StyleBox[\"FunKit\",\nFontWeight->\"Bold\"]\) requires \!\(\*
StyleBox[\"TensorBases\",\nFontWeight->\"Bold\"]\) to run."];Abort[];
];
];

Block[{Print},Get["TensorBases`"]]
PrintTemporary["\!\(\*
StyleBox[\"TensorBases\",\nFontSize->10,\nFontWeight->\"Bold\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSize->10,\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"loaded\",\nFontSize->10,\nFontWeight->\"Plain\",\nFontSlant->\"Italic\"]\)"];


(* ::Input::Initialization:: *)
If[Length@PacletFind["MaTeX"]===0,
ResourceFunction["MaTeXInstall"][]
]
Get["MaTeX`"]
PrintTemporary["\!\(\*
StyleBox[\"MaTeX\",\nFontSize->10,\nFontWeight->\"Bold\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSize->10,\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"loaded\",\nFontSize->10,\nFontWeight->\"Plain\",\nFontSlant->\"Italic\"]\)"];


(* ::Input::Initialization:: *)
Get[SelectFirst[
Join[
{
FileNameJoin[{$UserBaseDirectory,"Applications","FunKit"}],
FileNameJoin[{$BaseDirectory,"Applications","FunKit"}],
FileNameJoin[{$InstallationDirectory,"AddOns","Applications","FunKit"}],
FileNameJoin[{$InstallationDirectory,"AddOns","Packages","FunKit"}],
FileNameJoin[{$InstallationDirectory,"AddOns","ExtraPackages","FunKit"}]
},
Select[$Path,StringContainsQ[#,"FunKit"]&]
],
DirectoryQ[#]&
]<>"/"<>"/utils/MathematicaTeXUtilities.m"]


(* ::Input::Initialization:: *)
BeginPackage["FunKit`"];
Unprotect["FunKit`*"];
Unprotect["FunKit`Private`*"];
ClearAll["FunKit`*"];
ClearAll["FunKit`Private`*"];


(* ::Input::Initialization:: *)
ModuleLoaded[FunKit]=True;


(* ::Input::Initialization:: *)
$FunKitDirectory=SelectFirst[
Join[
{
FileNameJoin[{$UserBaseDirectory,"Applications","FunKit"}],
FileNameJoin[{$BaseDirectory,"Applications","FunKit"}],
FileNameJoin[{$InstallationDirectory,"AddOns","Applications","FunKit"}],
FileNameJoin[{$InstallationDirectory,"AddOns","Packages","FunKit"}],
FileNameJoin[{$InstallationDirectory,"AddOns","ExtraPackages","FunKit"}]
},
Select[$Path,StringContainsQ[#,"FunKit"]&]
],
DirectoryQ[#]&
]<>"/";

$FunKitVersion=0.1;


(* ::Input::Initialization:: *)
If[Head[$DistributedContexts]=!=List,$DistributedContexts={}];
$DistributedContexts=$DistributedContexts\[Union]{$Context,"FunKit`Private`","TensorBases`","FormTracer`","FormTracer`Private`","TensorBases`","TensorBases`Private`"}


(* ::Input::Initialization:: *)
Begin["`Private`"]
If[Head[$DistributedContexts]=!=List,$DistributedContexts={}];
$DistributedContexts=$DistributedContexts\[Union]{$Context,"FunKit`Private`","TensorBases`","FormTracer`","FormTracer`Private`","TensorBases`","TensorBases`Private`"}
End[]


(* ::Input::Initialization:: *)
$FunKitDebugLevel=0;
FunKitDebugLevel[newLevel_Integer]:=Module[{},
Unprotect@$FunKitDebugLevel;
Set[$FunKitDebugLevel,newLevel];
Protect@$FunKitDebugLevel;

Unprotect@FunKitDebug;
If[$FunKitDebugLevel<=0,ClearAll[FunKitDebug];SetAttributes[FunKitDebug,HoldAll];];
If[$FunKitDebugLevel>0,ClearAll[FunKitDebug];
FunKitDebug[level_Integer,$a___]:=If[level<=$FunKitDebugLevel,Print["[FunKit "<>ToString[level]<>"]  ",$a]];
];
Protect@FunKitDebug;
];
(*
   0: no info
 1: basic information what is happening
 2: in-depth what steps are being processed
3: the guts of the program
*)


(* ::Input::Initialization:: *)
PrintTemporary["\!\(\*
StyleBox[\"Loading\",\nFontSize->10,\nFontWeight->\"Plain\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSize->10,\nFontWeight->\"Plain\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"modules\",\nFontSize->10,\nFontWeight->\"Plain\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",\nFontSize->10,\nFontWeight->\"Plain\",\nFontSlant->\"Italic\"]\)"];
Get[$FunKitDirectory<>"modules/FEDeriK.m"];
PrintTemporary["\!\(\*
StyleBox[\"...\",\nFontSize->10,\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"FEDeriK\",\nFontSize->10,\nFontWeight->\"Bold\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSize->10,\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"loaded\",\nFontSize->10,\nFontWeight->\"Plain\",\nFontSlant->\"Italic\"]\)"];
Get[$FunKitDirectory<>"modules/AnSEL.m"];
PrintTemporary["\!\(\*
StyleBox[\"...\",\nFontSize->10,\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"AnSEL\",\nFontSize->10,\nFontWeight->\"Bold\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSize->10,\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"loaded\",\nFontSize->10,\nFontWeight->\"Plain\",\nFontSlant->\"Italic\"]\)"];
Get[$FunKitDirectory<>"modules/DiANE.m"];
PrintTemporary["\!\(\*
StyleBox[\"...\",\nFontSize->10,\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"DiANE\",\nFontSize->10,\nFontWeight->\"Bold\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSize->10,\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"loaded\",\nFontSize->10,\nFontWeight->\"Plain\",\nFontSlant->\"Italic\"]\)"];
Get[$FunKitDirectory<>"modules/DiRK.m"];
PrintTemporary["\!\(\*
StyleBox[\"...\",\nFontSize->10,\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"DiRK\",\nFontSize->10,\nFontWeight->\"Bold\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSize->10,\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"loaded\",\nFontSize->10,\nFontWeight->\"Plain\",\nFontSlant->\"Italic\"]\)"];
Get[$FunKitDirectory<>"modules/TRACY.m"];
PrintTemporary["\!\(\*
StyleBox[\"...\",\nFontSize->10,\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"TRACY\",\nFontSize->10,\nFontWeight->\"Bold\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSize->10,\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"loaded\",\nFontSize->10,\nFontWeight->\"Plain\",\nFontSlant->\"Italic\"]\)"];
Get[$FunKitDirectory<>"modules/COEN.m"];
PrintTemporary["\!\(\*
StyleBox[\"...\",\nFontSize->10,\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"COEN\",\nFontSize->10,\nFontWeight->\"Bold\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSize->10,\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"loaded\",\nFontSize->10,\nFontWeight->\"Plain\",\nFontSlant->\"Italic\"]\)"];
Get[$FunKitDirectory<>"modules/SeDecA.m"];
PrintTemporary["\!\(\*
StyleBox[\"...\",\nFontSize->10,\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"SeDecA\",\nFontSize->10,\nFontWeight->\"Bold\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSize->10,\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"loaded\",\nFontSize->10,\nFontWeight->\"Plain\",\nFontSlant->\"Italic\"]\)"];
If[$FrontEnd=!=Null,
Print["Welcome to  \!\(\*
StyleBox[\"\:2588\:2580\",\nFontColor->GrayLevel[0]]\)\!\(\*
StyleBox[\" \",\nFontColor->GrayLevel[0]]\)\!\(\*
StyleBox[\"\:2590\:2584\:2588\",\nFontColor->GrayLevel[0]]\)\!\(\*
StyleBox[\" \",\nFontColor->GrayLevel[0]]\)\!\(\*
StyleBox[\"\:2588\:259a\:258c\",\nFontColor->GrayLevel[0]]\)\!\(\*
StyleBox[\" \",\nFontColor->GrayLevel[0]]\)\!\(\*
StyleBox[\"\:2590\[FilledLeftTriangle]\",\nFontColor->GrayLevel[0]]\)\!\(\*
StyleBox[\" \",\nFontColor->GrayLevel[0]]\)\!\(\*
StyleBox[\"\:2588\",\nFontColor->GrayLevel[0]]\)\!\(\*
StyleBox[\" \",\nFontColor->GrayLevel[0]]\)\!\(\*
StyleBox[\"\:2580\:2588\:2580\",\nFontColor->GrayLevel[0]]\)
\!\(\*
StyleBox[\"Author\",\nFontWeight->\"Bold\"]\): Franz Richard Sattler
\!\(\*
StyleBox[\"Version\",\nFontWeight->\"Bold\"]\): 1.0
\!\(\*
StyleBox[\"Year\",\nFontWeight->\"Bold\"]\): 2025
For more information and a brief introduction to the package, call \!\(\*
StyleBox[\"FInfo\",\nFontColor->RGBColor[1, 0.5, 0]]\)[].
To run the testing suite, you can call  \!\(\*
StyleBox[\"FTest\",\nFontColor->RGBColor[1, 0.5, 0]]\)[].
"],
Print["Welcome to Funkit"];
Print["Author: Franz Richard Sattler"];
Print["\!\(\*
StyleBox[\"Version\",\nFontWeight->\"Bold\"]\): 1.0"];
Print["\!\(\*
StyleBox[\"Year\",\nFontWeight->\"Bold\"]\): 2025"];
Print["For more information and a brief introduction to the package, call \!\(\*
StyleBox[\"FInfo\",\nFontColor->RGBColor[1, 0.5, 0]]\)[]."];
Print["To run the testing suite, you can call  \!\(\*
StyleBox[\"FTest\",\nFontColor->RGBColor[1, 0.5, 0]]\)[]."];
];


(* ::Input::Initialization:: *)
FInfo[]:=Module[{},
Print["To see an overview and some examples for the syntax of \!\(\*
StyleBox[\"FEDeriK\",\nFontWeight->\"Bold\"]\), which forms the basis for all of \!\(\*
StyleBox[\"FunKit\",\nFontWeight->\"Bold\"]\), call \!\(\*
StyleBox[\"FInfo\",\nFontColor->RGBColor[1, 0.5, 0]]\)[\"FEDeriK\"]."]
];


(* ::Input::Initialization:: *)
FInfo["federik"]:=FInfo["FEDeriK"];
FInfo["Federik"]:=FInfo["FEDeriK"];
FInfo["FederiK"]:=FInfo["FEDeriK"];
FInfo["FeDerik"]:=FInfo["FEDeriK"];
FInfo["FeDeriK"]:=FInfo["FEDeriK"];
FInfo["feDeriK"]:=FInfo["FEDeriK"];
FInfo["federiK"]:=FInfo["FEDeriK"];
FInfo["FEDeriK"]:=Module[{},
Print["\!\(\*
StyleBox[\"General\",\nFontSize->18,\nFontWeight->\"Bold\"]\)\!\(\*
StyleBox[\" \",\nFontSize->18,\nFontWeight->\"Bold\"]\)\!\(\*
StyleBox[\"syntax\",\nFontSize->18,\nFontWeight->\"Bold\"]\)

The overall syntax used throughout \!\(\*
StyleBox[\"FunKit\",\nFontWeight->\"Bold\"]\)\!\(\*
StyleBox[\" \",\nFontWeight->\"Bold\"]\)is given by its core module\!\(\*
StyleBox[\" \",\nFontWeight->\"Bold\"]\)\!\(\*
StyleBox[\"FEDeriK\",\nFontWeight->\"Bold\"]\).
Any equation is comprised of terms that contain (possibly non-commuting) factors.
These terms are written out using the \!\(\*
StyleBox[\"FTerm\",\nFontColor->RGBColor[1, 0.5, 0]]\)\!\(\*
StyleBox[\" \",\nFontColor->RGBColor[1, 0.5, 0]]\)tag, e.g. the Wetterich equation ",MaTeX`MaTeX["\\partial_t \\Gamma = \\frac{1}{2}\\,G_{ab}\\partial_t R^{ab}"]," is given by
    \!\(\*
StyleBox[\"FTerm\",\nFontColor->RGBColor[1, 0.5, 0]]\)[\!\(\*FractionBox[\(1\), \(2\)]\), \!\(\*
StyleBox[\"Propagator\",\nFontWeight->\"Bold\"]\)[{\!\(\*
StyleBox[\"AnyField\",\nFontWeight->\"Bold\"]\),\!\(\*
StyleBox[\"AnyField\",\nFontWeight->\"Bold\"]\)},{a,b}], \!\(\*
StyleBox[\"Rdot\",\nFontWeight->\"Bold\"]\)[{\!\(\*
StyleBox[\"AnyField\",\nFontWeight->\"Bold\"]\),\!\(\*
StyleBox[\"AnyField\",\nFontWeight->\"Bold\"]\)},{-a,-b}]]
Similar to the \!\(\*
StyleBox[\"xAct\",\nFontWeight->\"Bold\"]\)\!\(\*
StyleBox[\" \",\nFontWeight->\"Bold\"]\)Mathematica package, we use negative indices (-a, -b) to indicate lower indices and positive indices (a, b) to indicate upper ones.
Furthermore, we have utilised syntax for \!\(\*
StyleBox[\"indexed\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"objects\",\nFontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",\nFontSlant->\"Italic\"]\)in the above. Both \!\(\*
StyleBox[\"Propagator\",\nFontWeight->\"Bold\"]\)\!\(\*
StyleBox[\" \",\nFontWeight->\"Bold\"]\)and \!\(\*
StyleBox[\"Rdot\",\nFontWeight->\"Bold\"]\)\!\(\*
StyleBox[\" \",\nFontWeight->\"Bold\"]\)are such indexed objects. 
Any indexed object must be comprised of two lists: the first one gives the field content, and the second list the corresponding super-indices or explicit indices.
To see a list of all indexed objects known to \!\(\*
StyleBox[\"FEDeriK\",\nFontWeight->\"Bold\"]\), one can call \!\(\*
StyleBox[\"ShowIndexedObjects\",\nFontColor->RGBColor[1, 0.5, 0]]\)[], which outputs "];
ShowIndexedObjects[];
Print["in the current case. One can register custom indexed objects with \!\(\*
StyleBox[\"FEDeriK\",\nFontWeight->\"Bold\"]\) by using \!\(\*
StyleBox[\"AddIndexedObject\",\nFontColor->RGBColor[1, 0.5, 0]]\)[_Symbol]. 
A subset of the indexed objects are correlation functions, and \!\(\*
StyleBox[\"ShowCorrelationFunctions\",\nFontColor->RGBColor[1, 0.5, 0]]\)[] outputs "];
ShowCorrelationFunctions[];
Print["These are special indexed objects, which are always hit by functional derivatives. 
As an example, take the generalised flow equation ",MaTeX`MaTeX["\\partial_t \\Gamma = -\\dot\\Phi^a\\Gamma_a + \\frac{1}{2}G^{ac}\\Bigg(\\gamma_c^{\\phantom{c}b}\\partial_t  + 2 \\frac{\\delta\\dot{\\Phi}^b}{\\delta\\Phi^c}\\Bigg){R}_{ab}"],
"First, we add a new correlation function using \!\(\*
StyleBox[\"AddCorrelationFunction\",\nFontColor->RGBColor[1, 0.5, 0]]\)[Phidot] and mark its last index to be never re-ordered using \!\(\*
StyleBox[\"SetUnorderedIndices\",\nFontColor->RGBColor[1, 0.5, 0]]\)[Phidot,1]"];
AddCorrelationFunction[Phidot];
SetUnorderedIndices[Phidot,1];
Print["Then, the flow equation can be written out as 

    \!\(\*
StyleBox[\"FEx\",\nFontColor->RGBColor[1, 0.5, 0]]\)[\!\(\*
StyleBox[\"FTerm\",\nFontColor->RGBColor[1, 0.5, 0]]\)[-1, \!\(\*
StyleBox[\"Phidot\",\nFontWeight->\"Bold\"]\)[{\!\(\*
StyleBox[\"AnyField\",\nFontWeight->\"Bold\"]\)},{a}], \!\(\*
StyleBox[\"GammaN\",\nFontWeight->\"Bold\"]\)[{\!\(\*
StyleBox[\"AnyField\",\nFontWeight->\"Bold\"]\)},{-a}]],\[IndentingNewLine]    \!\(\*
StyleBox[\"FTerm\",\nFontColor->RGBColor[1, 0.5, 0]]\)[\!\(\*FractionBox[\(1\), \(2\)]\), \!\(\*
StyleBox[\"Propagator\",\nFontWeight->\"Bold\"]\)[{\!\(\*
StyleBox[\"AnyField\",\nFontWeight->\"Bold\"]\),\!\(\*
StyleBox[\"AnyField\",\nFontWeight->\"Bold\"]\)},{a,b}], \!\(\*
StyleBox[\"Rdot\",\nFontWeight->\"Bold\"]\)[{\!\(\*
StyleBox[\"AnyField\",\nFontWeight->\"Bold\"]\),\!\(\*
StyleBox[\"AnyField\",\nFontWeight->\"Bold\"]\)},{-a,-b}]],\[IndentingNewLine]    \!\(\*
StyleBox[\"FTerm\",\nFontColor->RGBColor[1, 0.5, 0]]\)[ \!\(\*
StyleBox[\"Propagator\",\nFontWeight->\"Bold\"]\)[{\!\(\*
StyleBox[\"AnyField\",\nFontWeight->\"Bold\"]\),\!\(\*
StyleBox[\"AnyField\",\nFontWeight->\"Bold\"]\)},{a,c}], \!\(\*
StyleBox[\"Phidot\",\nFontWeight->\"Bold\"]\)[{\!\(\*
StyleBox[\"AnyField\",\nFontWeight->\"Bold\"]\),\!\(\*
StyleBox[\"AnyField\",\nFontWeight->\"Bold\"]\)},{-c,b}], \!\(\*
StyleBox[\"R\",\nFontWeight->\"Bold\"]\)[{\!\(\*
StyleBox[\"AnyField\",\nFontWeight->\"Bold\"]\),\!\(\*
StyleBox[\"AnyField\",\nFontWeight->\"Bold\"]\)},{-a,-b}]]]

In fact, Phidot has been already defined like this in \!\(\*
StyleBox[\"FEDeriK\",\nFontWeight->\"Bold\"]\). Some of the pre-defined equations, which you can examine in \!\(\*
StyleBox[\"FEDeriK\",\nFontWeight->\"Bold\"]\), are the two examples given above, which you can use under the names

	\!\(\*
StyleBox[\"WetterichEquation\",\nFontColor->RGBColor[1, 0.5, 0]]\)
	\!\(\*
StyleBox[\"GeneralizedFlowEquation\",\nFontColor->RGBColor[1, 0.5, 0]]\)
"];
];


(* ::Input::Initialization:: *)
FTest[]:=Module[{},
Get[$FunKitDirectory<>"tests/TestRunner.m"]
]


(* ::Input::Initialization:: *)
Protect["FunKit`*"];
EndPackage[];
